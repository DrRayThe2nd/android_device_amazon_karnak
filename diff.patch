Only in sensor_2: Android.bp
Only in sensor: android.hardware.sensors@1.0-service-mediatek.rc
Only in sensor_2: android.hardware.sensors@1.0-service.rc
diff sensor/Android.mk sensor_2/Android.mk
4,27d3
< LOCAL_MODULE := android.hardware.sensors@1.0-impl-mediatek
< LOCAL_PROPRIETARY_MODULE := true
< LOCAL_MODULE_RELATIVE_PATH := hw
< LOCAL_SRC_FILES := \
<     Sensors.cpp 
< 
< LOCAL_SHARED_LIBRARIES := \
<     liblog \
<     libcutils \
<     libhardware \
<     libhwbinder \
<     libbase \
<     libutils \
<     libhidlbase \
<     libhidltransport \
<     android.hardware.sensors@1.0 
< 
< LOCAL_STATIC_LIBRARIES := \
<     android.hardware.sensors@1.0-convert \
<     multihal 
< 
< include $(BUILD_SHARED_LIBRARY)
< 
< include $(CLEAR_VARS)
30,31c6,7
< LOCAL_MODULE := android.hardware.sensors@1.0-service-mediatek
< LOCAL_INIT_RC := android.hardware.sensors@1.0-service-mediatek.rc
---
> LOCAL_MODULE := android.hardware.sensors@1.0-service.mtk
> LOCAL_INIT_RC := android.hardware.sensors@1.0-service.rc
33c9
<         service.cpp 
---
>         service.cpp \
41,42d16
<         libhardware_legacy \
<         libhardware 
45d18
<         libhwbinder \
48c21
<         android.hardware.sensors@1.0 
---
>         android.hardware.sensors@1.0 \
Only in sensor_2: include
diff sensor/Sensors.cpp sensor_2/Sensors.cpp
18c18
< #include <sensors/convert.h>
---
> #include "convert.h"
24,31d23
< #include <utils/Log.h>
< 
< #ifdef LOG_TAG
< #undef LOG_TAG
< #define LOG_TAG "android.hardware.sensors@1.0-service-mediatek"
< #endif
< 
< #define DEBUG_CONNECTIONS false
106c98
<     CHECK_GE(getHalDeviceVersion(), SENSORS_DEVICE_API_VERSION_1_0);
---
>     //CHECK_GE(getHalDeviceVersion(), SENSORS_DEVICE_API_VERSION_1_3); Comment out for Mediatek
118d109
<     ALOGI("sensor hidl load sensor module success.");
162d152
<     ALOGI_IF(DEBUG_CONNECTIONS, "sensor hidl activate handle(%d) enable(%d).", sensor_handle, enabled);
188c178
<         if (!lock.owns_lock()) {
---
>         if(!lock.owns_lock()){
202,203c192,193
<                 reinterpret_cast<sensors_poll_device_t *>(mSensorDevice),
<                 data.get(), bufferSize);
---
>                     reinterpret_cast<sensors_poll_device_t *>(mSensorDevice),
>                     data.get(), bufferSize);
248d237
<     ALOGI_IF(DEBUG_CONNECTIONS, "sensor hidl batch handle(%d)...", sensor_handle);
259d247
<     ALOGI_IF(DEBUG_CONNECTIONS, "sensor hidl flush handle(%d)...", sensor_handle);
diff sensor/service.cpp sensor_2/service.cpp
17c17
< #define LOG_TAG "android.hardware.sensors@1.0-service-mediatek"
---
> #define LOG_TAG "android.hardware.sensors@1.0-service"
30d29
<     ALOGE("sensor hidl defaultPassthroughServiceImplementation start.");
